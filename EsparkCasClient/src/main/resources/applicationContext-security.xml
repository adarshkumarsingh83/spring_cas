<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd">

    <sec:http use-expressions="true" entry-point-ref="casEntryPoint">
        <sec:intercept-url pattern="/"
                           access="permitAll"/>

        <sec:intercept-url pattern="/403"
                           access="permitAll"/>

        <sec:intercept-url pattern="/protected/parents"
                           access="hasRole('ROLE_PARENTS')"/>

        <sec:intercept-url pattern="/protected/friends"
                           access="hasRole('ROLE_FRIENDS')"/>

        <sec:intercept-url pattern="/images/**"
                           access="hasAnyRole('ROLE_FRIENDS','ROLE_PARENTS')"/>

        <sec:access-denied-handler error-page="/403"/>

        <sec:custom-filter ref="singleLogoutFilter" before="LOGOUT_FILTER"/>
        <sec:custom-filter ref="casFilter" position="CAS_FILTER"/>

        <sec:logout logout-url="/logout"
                    logout-success-url="https://${cas.server.host}/${cas.server.app}/logout?service=http%3A%2F%2F${cas.client.host}%2FEsparkCasClient%2F"/>
    </sec:http>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="casAuthProvider"/>
    </sec:authentication-manager>


    <bean id="serviceProperties"
          class="org.springframework.security.cas.ServiceProperties">
        <property name="service"
                  value="https://${cas.client.sslhost}/EsparkCasClient/login"/>
    </bean>

    <!-- sends to the CAS Server, must be in entry-point-ref of security.xml -->
    <bean id="casEntryPoint"
          class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="serviceProperties" ref="serviceProperties"/>
        <property name="loginUrl" value="https://${cas.server.host}/${cas.server.app}/login" />
    </bean>

    <!-- authenticates CAS tickets, must be in custom-filter of security.xml -->
    <bean id="casFilter"
          class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="filterProcessesUrl" value="/login"/>
    </bean>

    <bean id="casAuthProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="ticketValidator" ref="ticketValidator"/>
        <property name="serviceProperties" ref="serviceProperties"/>
        <property name="key" value="casPhotoalbum"/>
        <property name="authenticationUserDetailsService" ref="authenticationUserDetailsService"/>
        <property name="statelessTicketCache" ref="statelessTicketCache"/>
    </bean>
    <bean id="statelessTicketCache" class="org.springframework.security.cas.authentication.EhCacheBasedTicketCache">
        <property name="cache">
            <bean class="net.sf.ehcache.Cache"
                  init-method="initialise" destroy-method="dispose">
                <constructor-arg value="casTickets"/>
                <constructor-arg value="50"/>
                <constructor-arg value="true"/>
                <constructor-arg value="false"/>
                <constructor-arg value="3600"/>
                <constructor-arg value="900"/>
            </bean>
        </property>
    </bean>

    <bean id="ticketValidator" class="org.jasig.cas.client.validation.Saml11TicketValidator">
        <constructor-arg value="https://${cas.server.host}/${cas.server.app}" />
    </bean>

    <bean id="authenticationUserDetailsService"
          class="org.springframework.security.cas.userdetails.GrantedAuthorityFromAssertionAttributesUserDetailsService">
        <constructor-arg>
            <array>
                <value>role</value>
            </array>
        </constructor-arg>
    </bean>

    <!-- Handles a Single Logout Request from the CAS Server must be in custom-filter of security.xml -->
    <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>

</beans>